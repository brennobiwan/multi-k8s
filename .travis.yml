# give sudo permissions to Travis.
sudo: required

# state that Docker must be installed on the Travis instance.
services:
  - docker

# set environment variables to the Travis instance.
env:
  global:
    # save the current GIT_SHA value of the master branch into GIT_SHA.
    - GIT_SHA=$(git rev-parse HEAD)
    # configure gcloud CLI to not prompt anything (example: asking for user input).
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1

before_install:
  # setting up GKE on the Travis instance.

  # decrypt the credentials file so Travis can interact with GKE.
  - openssl aes-256-cbc -K $encrypted_9f3b5599b056_key -iv $encrypted_9f3b5599b056_iv -in service-account.json.enc -out service-account.json -d

  # install Google Cloud SDK CLI on the Travis instance.
  - curl https://sdk.cloud.google.com | bash > /dev/null;

  # apply the SDK configuration to the Travis shell.
  - source $HOME/google-cloud-sdk/path.bash.inc

  # install the latest version of kubectl on the Travis instance.
  - gcloud components update kubectl

  # activate the account we created for Travis so it can interact with GKE; "service-account.json" has the account credentials. This file was encrypted and uploaded to Travis.
  - gcloud auth activate-service-account --key-file service-account.json

  # tell the gcloud CLI the project it is working on and the zone of the project.
  - gcloud config set project playground-s-11-a6a8c024
  - gcloud config set compute/zone us-central1-c

  # tell gcloud CLI which cluster the Travis is working with.
  - gcloud container clusters get-credentials multi-cluster-k8s

  # login to Docker Hub. These variables were already configured on Travis dashboard.
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin 

  # build the test image.
  - docker build -t brennobiwan/react-test -f ./client/Dockerfile.dev ./client

script:
  # run the test
  - docker run -e CI=true brennobiwan/react-test npm run test

deploy:
  # tell Travis that we will deploy the cluster using a custom script.
  provider: script
  # script that will deploy our cluster to GKE.
  script: bash ./deploy.sh
  # trigger the deployment only when something is pushed to GitHub master branch.
  on:
    branch: master
